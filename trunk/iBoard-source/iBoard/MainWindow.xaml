<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" 
        xmlns:system="clr-namespace:System;assembly=mscorlib" 
        mc:Ignorable="d" 
        x:Name="AppWindow" 
        x:Class="iBoard.MainWindow"
        xmlns:data="clr-namespace:iBoard.Classes.Data"
        xmlns:email="clr-namespace:iBoard.Classes.Data.Email"
        xmlns:moodle="clr-namespace:iBoard.Classes.Data.Moodle"
        xmlns:twitter="clr-namespace:iBoard.Classes.Data.Twitter"
        Title="iBoard" Height="800" Width="1024" Foreground="White" Icon="Assets/Icons/icon.ico" WindowStartupLocation="CenterOwner" Opacity="1" Initialized="loginWindow_Initialized">
    <Window.Resources>
        <data:Users x:Key="UsersList"/>
        <data:Accounts x:Key="AccountsList"/>
		
		<!-- contains all the visible moodle accounts -->
		<ObjectDataProvider ObjectType="{x:Type moodle:MoodleAccounts}" x:Key="MoodleVisibleAccountsList" />
		<!-- contains all the moodle accounts (including the hidden ones) -->
		<ObjectDataProvider ObjectType="{x:Type moodle:MoodleAccounts}" x:Key="MoodleAllAccountsList">
			<ObjectDataProvider.ConstructorParameters>
                <system:Boolean>true</system:Boolean>
			</ObjectDataProvider.ConstructorParameters>
		</ObjectDataProvider>
		
		<!-- contains all the visible twitter accounts -->
		<ObjectDataProvider ObjectType="{x:Type twitter:TwitterAccounts}" x:Key="TwitterVisibleAccountsList" />
		<!-- contains all the twitter accounts (including the hidden ones) -->
		<ObjectDataProvider ObjectType="{x:Type twitter:TwitterAccounts}" x:Key="TwitterAllAccountsList">
			<ObjectDataProvider.ConstructorParameters>
                <system:Boolean>true</system:Boolean>
			</ObjectDataProvider.ConstructorParameters>
		</ObjectDataProvider>
		
		<!-- contains all the visible email accounts -->
		<ObjectDataProvider ObjectType="{x:Type email:EmailAccounts}" x:Key="EmailVisibleAccountsList" />
		<!-- contains all the email accounts (including the hidden ones) -->
		<ObjectDataProvider ObjectType="{x:Type email:EmailAccounts}" x:Key="EmailAllAccountsList">
			<ObjectDataProvider.ConstructorParameters>
                <system:Boolean>true</system:Boolean>
			</ObjectDataProvider.ConstructorParameters>
		</ObjectDataProvider>
		
		<!-- Data template for the account tree item -->
        <DataTemplate x:Key="AccountLayout" DataType="Account">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding Path=ImageUrl}" Width="20" Height="20" Margin="2" />
                <TextBlock Text="{Binding Path=Name}" Foreground="White" Margin="2" />
            </StackPanel>
        </DataTemplate>
		
        <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFFFFF" Offset="0"/>
    		<GradientStop Color="#FFFBFF" Offset="0.5"/>
    		<GradientStop Color="#F7F7F7" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#ECECEC" Offset="0"/>
    		<GradientStop Color="#DDDDDD" Offset="0.5"/>
    		<GradientStop Color="#A0A0A0" Offset="1"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF"/>
    	<SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
    	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
    		<Setter Property="MinHeight" Value="0"/>
    		<Setter Property="MinWidth" Value="0"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
    						<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
    							<Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
    							<Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
    							<Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
    							<Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
    						</Canvas>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    						</Trigger>
    						<Trigger Property="IsKeyboardFocused" Value="true">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
    				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    			</DataTrigger>
    		</Style.Triggers>
    	</Style>
    	<LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#FFFFFF" Offset="0"/>
    		<GradientStop Color="#FFFBFF" Offset="0.5"/>
    		<GradientStop Color="#F7F7F7" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#ECECEC" Offset="0"/>
    		<GradientStop Color="#DDDDDD" Offset="0.5"/>
    		<GradientStop Color="#A0A0A0" Offset="1"/>
    	</LinearGradientBrush>
    	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
    		<Setter Property="MinHeight" Value="0"/>
    		<Setter Property="MinWidth" Value="0"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
    						<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
    							<Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
    							<Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
    							<Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
    							<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
    						</Canvas>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    						</Trigger>
    						<Trigger Property="IsKeyboardFocused" Value="true">
    							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
    				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    			</DataTrigger>
    		</Style.Triggers>
    	</Style>
    	<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080"/>
    	<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD"/>
    	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    						<Rectangle>
    							<Rectangle.Fill>
    								<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
    									<DrawingBrush.Drawing>
    										<DrawingGroup>
    											<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
    											<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
    										</DrawingGroup>
    									</DrawingBrush.Drawing>
    								</DrawingBrush>
    							</Rectangle.Fill>
    						</Rectangle>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Cursor" Value="SizeAll"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
    		<Setter Property="Margin" Value="0,0,11,0"/>
    		<Setter Property="CornerRadius" Value="3,3,3,3"/>
    		<Style.Triggers>
    			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
    				<Setter Property="CornerRadius" Value="0,0,0,0"/>
    			</DataTrigger>
    		</Style.Triggers>
    	</Style>
    	<Style x:Key="SimpleToolbar" TargetType="{x:Type ToolBar}">
    		<Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToolBar}">
    					<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
    						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}" Margin="0">
    							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
    								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    							</DockPanel>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsOverflowOpen" Value="true"/>
    						<Trigger Property="Header" Value="{x:Null}"/>
    						<Trigger Property="ToolBarTray.IsLocked" Value="true"/>
    						<Trigger Property="Orientation" Value="Vertical">
    							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
    							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
    							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
    							<Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
    				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    			</DataTrigger>
    		</Style.Triggers>
    	</Style>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect/>
    </Window.Effect>
    <Window.Background>
        <RadialGradientBrush>
            <RadialGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" 
						ScaleX="1.672" ScaleY="1.672" />
                    <SkewTransform CenterX="0.5" CenterY="0.5"
						AngleX="0" AngleY="0" />
                    <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0" />
                    <TranslateTransform X="0" Y="0" />
                </TransformGroup>
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#FF2F2F2F"/>
            <GradientStop Color="#FF000000" Offset="1"/>
        </RadialGradientBrush>
    </Window.Background>
    <Grid x:Name="BaseGrid">
    	<VisualStateManager.CustomVisualStateManager>
    		<ei:ExtendedVisualStateManager/>
    	</VisualStateManager.CustomVisualStateManager>
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="AppStates">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:1">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:RadialBlurTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    				</VisualTransition>
    				<VisualTransition GeneratedDuration="0:0:2" To="LoginState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:FadeTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LoginGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoginGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginGrid">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginToolBar">
    							<EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<CubicEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="LoginToolBar">
    							<EasingThicknessKeyFrame KeyTime="0:0:1.8" Value="0,0,-75,0"/>
    							<EasingThicknessKeyFrame KeyTime="0:0:2" Value="0">
    								<EasingThicknessKeyFrame.EasingFunction>
    									<CubicEase EasingMode="EaseOut"/>
    								</EasingThicknessKeyFrame.EasingFunction>
    							</EasingThicknessKeyFrame>
    						</ThicknessAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="LoginState" GeneratedDuration="0:0:1" To="NewUserState">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LoginGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewUserOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="NewUserOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="NewUserState" GeneratedDuration="0:0:1" To="LoginState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="BottomToTop"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<ExponentialEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LoginGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoginGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginGrid">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="NewUserOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginToolBar">
    							<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="LoginToolBar">
    							<EasingThicknessKeyFrame KeyTime="0:0:1" Value="0,0,-75,0"/>
    							<EasingThicknessKeyFrame KeyTime="0:0:1.2" Value="0"/>
    						</ThicknessAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="LoginState" GeneratedDuration="0:0:1" To="MainAppState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    				</VisualTransition>
    				<VisualTransition From="MainAppState" GeneratedDuration="0:0:1" To="LoginState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="BottomToTop"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginGrid">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoginGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition GeneratedDuration="0:0:1" To="AccountsManageOperationSelectionState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="BottomToTop"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsManageOperationSelectionState" GeneratedDuration="0:0:1">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsAddState" GeneratedDuration="0:0:1" To="AccountsManageOperationSelectionState">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsManageOperationSelectionState" GeneratedDuration="0:0:1" To="AccountsAddState">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsAddState" GeneratedDuration="0:0:1">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    				</VisualTransition>
    				<VisualTransition From="AccountsAddState" GeneratedDuration="0:0:1" To="AddTwitterUser1">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="MainApplicationGrid">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
    						</DoubleAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AddTwitterUser1" GeneratedDuration="0:0:1" To="AccountsAddState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AddTwitterUser1" GeneratedDuration="0:0:1" To="AddTwitterUser2">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddTwitterOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AddTwitterUser2" GeneratedDuration="0:0:1" To="AccountsAddState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="LeftToRight"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountManageMoodleState" GeneratedDuration="0:0:1" To="AccountsAddState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsAddState" GeneratedDuration="0:0:1" To="AccountManageMoodleState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsManageOperationSelectionState" GeneratedDuration="0:0:1" To="AccountsEditState">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsEditOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountManageMoodleState" GeneratedDuration="0:0:1" To="AccountsEditState">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsEditOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsEditState" GeneratedDuration="0:0:1" To="AccountManageMoodleState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsEditOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountManageMoodleState" GeneratedDuration="0:0:1">
    					<VisualTransition.GeneratedEasingFunction>
    						<CircleEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddMailOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountEditMoodleOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsEditState" GeneratedDuration="0:0:1">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="TopToBottom"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsEditOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsEditOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>

    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="AccountsAddState" GeneratedDuration="0:0:1" To="AccountAddMail">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect SlideDirection="RightToLeft"/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddMailOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddMailOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="button">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="button1">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>

    				<VisualTransition From="AccountAddMail" GeneratedDuration="0:0:1" To="AccountsAddState">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:SlideInTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddMailOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddMailOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    						</BooleanAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						</ObjectAnimationUsingKeyFrames>
    						<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    							<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    						</BooleanAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>


    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="LoginState">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginGrid">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoginGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginToolBar">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="LoginToolBar">
    						<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
    					</ThicknessAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LoginGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="NewUserState">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="NewUserOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewUserOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="MainAppState">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UserControlGrid">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UserControlGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AccountsManageOperationSelectionState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsManageOptionsOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AccountsAddState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsAddOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AccountManageMoodleState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountEditMoodleOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountEditMoodleOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AddTwitterUser1">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddTwitterOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddTwitterOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AddTwitterUser2">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddTwitterOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountAddTwitterOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="BaseGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BaseGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AccountsEditState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MainApplicationGrid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountsEditOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="AccountAddMail">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AccountAddMailOverlay">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="AccountsAddOverlay">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
    					</BooleanAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="txtMailAccountName">
    						<EasingDoubleKeyFrame KeyTime="0" Value="4.412"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="txtMailAccountName">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>


    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
    	<Grid.RowDefinitions>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition/>
    	</Grid.ColumnDefinitions>
        <Grid x:Name="MainApplicationGrid" RenderTransformOrigin="0.5,0.5">
        	<Grid.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Grid.RenderTransform>
        	<Grid.RowDefinitions>
        		<RowDefinition Height="55.808"/>
        		<RowDefinition/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="170"/>
        		<ColumnDefinition Width="0.804*"/>
        	</Grid.ColumnDefinitions>
        	<GridSplitter Grid.Column="1" HorizontalAlignment="Left" Width="4" Grid.RowSpan="2" Foreground="{x:Null}" Background="Black" BorderBrush="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" BorderThickness="1"/>
        	<Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource ToolBarToggleButtonHorizontalBackground}"/>
        	<Image Margin="8,4,0,4" Source="Assets/logo.png" d:LayoutOverrides="Height" HorizontalAlignment="Left"/>
        	<ToolBar Grid.Column="1" Margin="0,8,8,4" Style="{DynamicResource SimpleToolbar}" Background="{x:Null}" Foreground="{x:Null}" HorizontalAlignment="Right" d:LayoutOverrides="HorizontalAlignment">
        		<Button x:Name="btnBannerEditAccounts" Background="{x:Null}" BorderThickness="1" BorderBrush="{x:Null}" HorizontalAlignment="Right" Margin="0,0,0,-1" VerticalAlignment="Center" Cursor="Hand" ToolTip="Click to manage your accounts" Click="btnBannerEditAccounts_Click">
        			<StackPanel Orientation="Horizontal" d:IsLocked="True">
        				<Image Height="12" Source="Assets/Icons/accounts_small.png" Stretch="Fill" Width="11" Margin="5"/>
        				<Label Content="Accounts" Style="{DynamicResource SimpleLabel}" Width="55.59" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        			</StackPanel>
        		</Button>
        		<Button x:Name="btnBannerEditConfiguration" Background="{x:Null}" BorderThickness="1" BorderBrush="{x:Null}" HorizontalAlignment="Right" Margin="0,0,0,-1" VerticalAlignment="Center" Cursor="Hand" ToolTip="Click to manage your settings">
        			<StackPanel Orientation="Horizontal">
        				<Image Height="12" Source="Assets/Icons/config_small.png" Stretch="Fill" Width="11" Margin="5"/>
        				<Label Content="Settings" Style="{DynamicResource SimpleLabel}" Width="55.59" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        			</StackPanel>
        		</Button>
        		<Button x:Name="btnBannerLogout" Background="{x:Null}" BorderThickness="1" BorderBrush="{x:Null}" HorizontalAlignment="Right" Margin="0,0,0,-1" VerticalAlignment="Center" Cursor="Hand" IsCancel="True" ToolTip="Click to logout" Click="_logout">
        			<StackPanel Orientation="Horizontal" d:IsLocked="True">
        				<Image Height="12" Source="Assets/Icons/exit_small.png" Stretch="Fill" Width="11" Margin="5"/>
        				<Label Content="Logout" Style="{DynamicResource SimpleLabel}" Width="55.59" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        			</StackPanel>
        		</Button>
        	</ToolBar>
        	<TreeView x:Name="Menu" Grid.Row="1" Background="{x:Null}" Foreground="White" BorderBrush="{x:Null}" HorizontalContentAlignment="Stretch">
        		<TreeView.ItemContainerStyle>
					<Style TargetType="TreeViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					</Style>
			    </TreeView.ItemContainerStyle>
        		<TreeViewItem x:Name="UnifiedAccountsElement" Foreground="White" HorizontalContentAlignment="Stretch" Selected="GetUnifiedAccounts">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
			                <Image Width="20" Height="20" Margin="2" Source="Assets/Icons/icon.ico" />
			                <TextBlock Foreground="White" Margin="2" Text="Unified" FontWeight="Bold" />
			            </StackPanel>
        			</TreeViewItem.Header>
        		</TreeViewItem>
				<TreeViewItem x:Name="EmailAccountsElement" ItemsSource="{Binding Source={StaticResource EmailVisibleAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" Selected="EmailAccountsElement_Selected" DataContext="{Binding}">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
			                <Image Width="20" Height="20" Margin="2" Source="Assets/Icons/email.png" />
			                <TextBlock Foreground="White" Margin="2" Text="Email accounts" />
			            </StackPanel>
        			</TreeViewItem.Header>    		
				</TreeViewItem>
        		<TreeViewItem x:Name="MoodleAccountsElement" ItemsSource="{Binding Source={StaticResource MoodleVisibleAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" Selected="MoodleAccountsElement_Selected" DataContext="{Binding}">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
			                <Image Width="20" Height="20" Margin="2" Source="Assets/Icons/moodle.png" />
			                <TextBlock Foreground="White" Margin="2" Text="Moodle accounts" />
			            </StackPanel>
        			</TreeViewItem.Header>
        		</TreeViewItem>
        		<TreeViewItem x:Name="TwitterAccountsElement" ItemsSource="{Binding Source={StaticResource TwitterVisibleAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" Selected="TwitterAccountsElement_Selected" DataContext="{Binding}">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
			                <Image Width="20" Height="20" Margin="2" Source="Assets/Icons/twitter.png" />
			                <TextBlock Foreground="White" Margin="2" Text="Twitter accounts" />
			            </StackPanel>
        			</TreeViewItem.Header>    		
				</TreeViewItem>
        		
        	</TreeView>
        	<Label x:Name="txtWelcome" Content="" Grid.Column="1" Margin="0,0,0,4" HorizontalAlignment="Left" Width="193.63" VerticalAlignment="Bottom"/>
        	<Grid x:Name="UserControlGrid" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="4,0,0,0" Grid.Column="1" Grid.Row="1">
        		<Grid.RenderTransform>
        			<TransformGroup>
        				<ScaleTransform/>
        				<SkewTransform/>
        				<RotateTransform/>
        				<TranslateTransform/>
        			</TransformGroup>
        		</Grid.RenderTransform>
        		<Grid.RowDefinitions>
        			<RowDefinition/>
        		</Grid.RowDefinitions>
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition/>
        		</Grid.ColumnDefinitions>
        		<UserControl x:Name="userControlPlace" RenderTransformOrigin="0.5,0.5" Margin="8" Panel.ZIndex="10">
        			<UserControl.RenderTransform>
        				<TransformGroup>
        					<ScaleTransform/>
        					<SkewTransform/>
        					<RotateTransform/>
        					<TranslateTransform/>
        				</TransformGroup>
        			</UserControl.RenderTransform>
        		</UserControl>
        	</Grid>
        	<Label x:Name="lblControlLoading" Content="Loading, please wait..." HorizontalAlignment="Left" Margin="8,8,0,0" VerticalAlignment="Top" Grid.Column="1" Grid.Row="1" Foreground="White" FontSize="13.333" Visibility="Hidden"/>
        </Grid>
        <Grid x:Name="LoginGrid" Opacity="0" IsEnabled="False" Visibility="Hidden">
            <Grid.RowDefinitions>
            	<RowDefinition Height="Auto" MinHeight="34.816"/>
            	<RowDefinition Height="0.477*"/>
            	<RowDefinition Height="149.798"/>
            	<RowDefinition Height="0.523*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
            	<ColumnDefinition Width="0.503*"/>
            	<ColumnDefinition Width="245.342"/>
            	<ColumnDefinition Width="0.497*"/>
            </Grid.ColumnDefinitions>
            <ToolBar x:Name="LoginToolBar" IsOverflowOpen="True" HorizontalAlignment="Right" Style="{DynamicResource SimpleToolbar}" VerticalAlignment="Center" Grid.Column="2" Margin="0,0,-75,0" Opacity="0">
            	<ToolBar.Background>
            		<LinearGradientBrush SpreadMethod="Pad" EndPoint="0.5,1" StartPoint="0.5,0">
            			<GradientStop Color="#FF3B3B3B" Offset="0"/>
            			<GradientStop Color="#FF000000" Offset="1"/>
            		</LinearGradientBrush>
            	</ToolBar.Background>
                <Button x:Name="addAccountBtn" HorizontalAlignment="Right" VerticalAlignment="Center" Cursor="Hand" ToolTip="Click to manage the application users" Click="addAccountBtn_Click">
                    <Image Height="24" Width="24" Source="Assets/Icons/accounts.png" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" d:IsLocked="True"/>
                </Button>
                <Button x:Name="configBtn" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="White" Cursor="Hand" Height="27.768" ToolTip="Click to restore a configuration backup" Click="configBtn_Click">
                    <Image Height="24" Width="24" Source="Assets/Icons/import.png" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" d:IsLocked="True"/>
                </Button>
            </ToolBar>
            <Label Content="Username:" Margin="8,8,8,0" Grid.Row="2" VerticalAlignment="Top" Grid.Column="1" Foreground="White" FontFamily="/iBoard;component/Fonts/#Segoe UI"/>
            <TextBox x:Name="txtLoginUsername" Margin="8,33.96,8,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Grid.Column="1" ToolTip="Insert the username"/>
            <Label Content="Password:" Margin="8,0,8,57.759" Grid.Row="2" Grid.Column="1" Foreground="White" FontFamily="/iBoard;component/Fonts/#Segoe UI" VerticalAlignment="Bottom"/>
            <PasswordBox x:Name="pbLoginPassword" Grid.Column="1" Margin="8,0,8,33.96" Grid.Row="2" VerticalAlignment="Bottom" Height="23.799"/>
            <Button x:Name="btnLogin" Content="Login" Grid.Column="1" Margin="0,0,8,4.997" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Cursor="Hand" IsDefault="True" Click="btnLogin_Click" ToolTip="Click to login"/>
            <CheckBox x:Name="cbRememberLogin" Content="Remember" Grid.Column="1" HorizontalAlignment="Left" Margin="8,0,0,7.998" Grid.Row="2" VerticalAlignment="Bottom" Foreground="White" ToolTip="Check to remember the user credentials" Cursor="Hand"/>
        </Grid>
        <Grid x:Name="NewUserOverlay" Visibility="Hidden" Panel.ZIndex="1" IsEnabled="False">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="0.172*"/>
        		<RowDefinition Height="70"/>
        		<RowDefinition Height="70"/>
        		<RowDefinition Height="70"/>
        		<RowDefinition Height="0.828*"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="0.009*"/>
        		<ColumnDefinition Width="150"/>
        		<ColumnDefinition Width="0.991*"/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
            <Button x:Name="btnCancelAddNewUser" Content="Cancel" HorizontalAlignment="Right" Margin="0,0,8,8" VerticalAlignment="Bottom" Width="75" Click="btnCancelAddNewUser_Click" Panel.ZIndex="2" Cursor="Hand" Grid.Column="2" Grid.Row="4" IsCancel="True" RenderTransformOrigin="0.44,9.702"/>
            <Label Content="Add new user:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,12.625,4.17" d:LayoutOverrides="Height" Grid.Column="1" HorizontalAlignment="Right"/>
            <Label Content="Username:" Margin="63.895,8,8,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" d:LayoutOverrides="Width" Grid.Row="1" VerticalAlignment="Top" Grid.Column="1"/>
            <TextBox x:Name="txtNewUserUsername" Margin="8,12,8,0" TextWrapping="Wrap" Grid.Column="2" Grid.Row="1" FontSize="13.333" VerticalAlignment="Top" LostFocus="txtNewUserUsername_LostFocus"/>
            <Label Content="Password:" Margin="63.895,8,8,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" Grid.Row="2" d:LayoutOverrides="Width" VerticalAlignment="Top" Grid.Column="1"/>
            <PasswordBox x:Name="txtNewUserPassword" Grid.Column="2" Margin="8,12,8,0" Grid.Row="2" VerticalAlignment="Top" FontSize="13.333" FontFamily="/iBoard;component/Fonts/#Segoe UI" LostFocus="txtNewUserPassword_LostFocus"/>
            <Label Content="Password:" Margin="63.895,8,8,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" Grid.Row="3" VerticalAlignment="Top" d:LayoutOverrides="Width" RenderTransformOrigin="0.289,0.757" Grid.Column="1"/>
            <PasswordBox x:Name="txtNewUserPasswordConfirmation" Grid.Column="2" Margin="8,12,8,0" Grid.Row="3" VerticalAlignment="Top" FontSize="13.333" FontFamily="/iBoard;component/Fonts/#Segoe UI" LostFocus="txtNewUserPasswordConfirmation_LostFocus"/>
            <Label x:Name="lblNewUserUsernameError" Content="" Margin="8,0,8,8" Grid.Row="1" VerticalAlignment="Bottom" Grid.Column="2" FontSize="10.667" Background="#00E40E0E" Foreground="Red"/>
            <Label x:Name="lblNewUserPasswordError" Content="" Margin="8,0,8,8" Grid.Row="2" Grid.Column="2" FontSize="10.667" Background="#00E40E0E" Foreground="Red" VerticalAlignment="Bottom"/>
            <Label x:Name="lblNewUserPasswordConfirmationError" Content="" Margin="8,0,8,8" Grid.Row="3" Grid.Column="2" FontSize="10.667" Background="#00E40E0E" Foreground="Red" VerticalAlignment="Bottom"/>
            <Button x:Name="btnAddNewUser" Content="Add user" Margin="0,0,87,8" VerticalAlignment="Bottom" Click="btnAddNewUser_Click" Panel.ZIndex="2" Cursor="Hand" Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right" Width="75" IsDefault="True" ToolTip="Press to save the user"/>
        </Grid>
        <Grid x:Name="AccountsManageOptionsOverlay" Panel.ZIndex="1" Visibility="Hidden" IsEnabled="False">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="56"/>
        		<RowDefinition/>
        		<RowDefinition Height="40"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
        	<Label Content="Select an option:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,8,0" HorizontalAlignment="Right" Width="992" Height="45.799" VerticalAlignment="Top"/>
        	<Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,8,8" Width="75" Click="ShowMainApp" Panel.ZIndex="2" Cursor="Hand" Grid.Row="2" IsCancel="True" VerticalAlignment="Bottom"/>
        	<StackPanel Margin="0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
        		<Button Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{DynamicResource DefaultedBorderBrush}" Click="AccountsAddAccount_Click">
        			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180">
        				<Image Height="48" Margin="10,0" Source="Assets/Icons/account_add.png" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        				<Label Content="Add account" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        			</StackPanel>
        		</Button>
        		<Button Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{DynamicResource DefaultedBorderBrush}" Click="ManageAccounts">
        			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180">
        				<Image Height="48" Source="Assets/Icons/account_edit.png" Stretch="Fill" Width="48" Margin="10,0"/>
        				<Label Content="Edit account" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        			</StackPanel>
        		</Button>
        	</StackPanel>
        </Grid>
        <Grid x:Name="AccountsAddOverlay" Panel.ZIndex="1" IsEnabled="False" Visibility="Hidden">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="52"/>
        		<RowDefinition/>
        		<RowDefinition Height="40"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
        	<Label Content="Select an account type:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,8,4.17" d:LayoutOverrides="Height" HorizontalAlignment="Right" Width="992"/>
        	<Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,8,8" Width="75" Click="ShowMainApp" Panel.ZIndex="2" Cursor="Hand" Grid.Row="2" IsCancel="True" VerticalAlignment="Bottom"/>
        	<StackPanel Margin="0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
        		<Button Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{DynamicResource DefaultedBorderBrush}" Click="ShowNewMoodleAccountForm">
        			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180">
        				<Image Height="48" Margin="10,0" Source="Assets/Icons/moodle.png" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        				<Label Content="Moodle" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        			</StackPanel>
        		</Button>
        		<Button Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{DynamicResource DefaultedBorderBrush}" Click="TwitterButton_Click">
        			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180">
        				<Image Height="48" Source="Assets/Icons/twitter.png" Stretch="Fill" Width="48" Margin="10,0"/>
        				<Label Content="Twitter" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        			</StackPanel>
        		</Button>
        		<Button Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{DynamicResource DefaultedBorderBrush}" Click="MailButton_Click">
        			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180">
        				<Image Height="48" Source="Assets/Icons/email.png" Stretch="Fill" Width="48" Margin="10,0"/>
        				<Label Content="Email" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        			</StackPanel>
        		</Button>
        	</StackPanel>
        	<Button Content="Back" HorizontalAlignment="Right" Margin="0,0,90.5,8" Width="75" Click="AccountsAddBack_Click" Panel.ZIndex="2" Cursor="Hand" Grid.Row="2" IsCancel="True" VerticalAlignment="Bottom"/>
        </Grid>
        <Grid x:Name="AccountEditMoodleOverlay" Panel.ZIndex="1" Visibility="Hidden">
        	<Grid.RowDefinitions>
        		<RowDefinition/>
        		<RowDefinition Height="40"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
        	<Label x:Name="lblAccountAddMoodleLoading" Content="Loading..." HorizontalAlignment="Left" Margin="8,8,0,0" VerticalAlignment="Top" Foreground="White"/>
        	<UserControl x:Name="MoodleAccountControl" RenderTransformOrigin="0.5,0.5">
        		<UserControl.RenderTransform>
        			<TransformGroup>
        				<ScaleTransform/>
        				<SkewTransform/>
        				<RotateTransform/>
        				<TranslateTransform/>
        			</TransformGroup>
        		</UserControl.RenderTransform>
        	</UserControl>
        </Grid>

        <Grid x:Name="AccountAddTwitterOverlay" Panel.ZIndex="1" Visibility="Hidden">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="53"/>
        		<RowDefinition Height="Auto" MinHeight="669"/>
        		<RowDefinition Height="40"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
            <Label Content="Twitter account settings:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,8,4.17" d:LayoutOverrides="Height" HorizontalAlignment="Right" Width="930.237" Visibility="Hidden"/>
        	<Label x:Name="lblAccountAddTwitterLoading" Content="Loading..." HorizontalAlignment="Left" Margin="8,8,0,21.723" Foreground="White" d:LayoutOverrides="Height"/>
        	<UserControl x:Name="TwitterAccountControl" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,-4" Grid.RowSpan="2">
        		<UserControl.RenderTransform>
        			<TransformGroup>
        				<ScaleTransform/>
        				<SkewTransform/>
        				<RotateTransform/>
        				<TranslateTransform/>
        			</TransformGroup>
        		</UserControl.RenderTransform>
        	</UserControl>
        </Grid>
        <Grid x:Name="AccountsEditOverlay" Panel.ZIndex="1" Visibility="Hidden">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="52"/>
        		<RowDefinition/>
        		<RowDefinition Height="40"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
        	<TreeView x:Name="EditAccountsMenu" Grid.Row="1" Background="{x:Null}" Foreground="White" BorderBrush="{x:Null}" Margin="8">
        		
        		<TreeViewItem x:Name="EditMoodleAccountsElement" ItemsSource="{Binding Source={StaticResource MoodleAllAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" Selected="MoodleAccountsEditSelected">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
        					<Image Width="20" Height="20" Margin="2" Source="Assets/Icons/moodle.png" />
        					<TextBlock Foreground="White" Margin="2" Text="Moodle accounts" />
        				</StackPanel>
        			</TreeViewItem.Header>
        		</TreeViewItem>
        		<TreeViewItem x:Name="EditTwitterAccountsElement" ItemsSource="{Binding Source={StaticResource TwitterAllAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" Selected="TwitterAccountsElementSelected" DataContext="{Binding}">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
        					<Image Width="20" Height="20" Margin="2" Source="Assets/Icons/twitter.png" />
        					<TextBlock Foreground="White" Margin="2" Text="Twitter accounts" />
        				</StackPanel>
        			</TreeViewItem.Header>    		
        		</TreeViewItem>
        		<TreeViewItem x:Name="EditEmailAccountsElement" ItemsSource="{Binding Source={StaticResource EmailAllAccountsList}}" ItemTemplate="{DynamicResource AccountLayout}" Foreground="White" Width="147" HorizontalAlignment="Left" Selected="EmailAccountsElement_Selected">
        			<TreeViewItem.Header>
        				<StackPanel Orientation="Horizontal">
        					<Image Width="20" Height="20" Margin="2" Source="Assets/Icons/email.png" />
        					<TextBlock Foreground="White" Margin="2" Text="Email accounts" />
        				</StackPanel>
        			</TreeViewItem.Header>    		
        		</TreeViewItem>
        	</TreeView>
        	<Label Content="Click on the account to edit:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,8,4.17" d:LayoutOverrides="Height" HorizontalAlignment="Right" Width="992"/>
        	<Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,8,8" Width="75" Click="ShowMainApp" Panel.ZIndex="2" Cursor="Hand" Grid.Row="2" IsCancel="True" VerticalAlignment="Bottom"/>
        	<StackPanel Margin="0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        	<Button Content="Back" HorizontalAlignment="Right" Margin="0,0,90.5,8" Width="75" Click="AccountsAddBack_Click" Panel.ZIndex="2" Cursor="Hand" Grid.Row="2" IsCancel="True" VerticalAlignment="Bottom"/>
        </Grid>
        <Grid x:Name="AccountAddMailOverlay" Panel.ZIndex="1" Margin="0" Visibility="Hidden">
        	<Grid.RowDefinitions>
        		<RowDefinition Height="0.131*"/>
        		<RowDefinition Height="0.601*"/>
        		<RowDefinition Height="0.268*"/>
        		<RowDefinition Height="70"/>
        		<RowDefinition Height="70"/>
        		<RowDefinition Height="320.056"/>
        	</Grid.RowDefinitions>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="0.009*"/>
        		<ColumnDefinition Width="150"/>
        		<ColumnDefinition Width="0.991*"/>
        	</Grid.ColumnDefinitions>
        	<Grid.Background>
        		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        			<GradientStop Color="#FF3B3B3B"/>
        			<GradientStop Color="Black" Offset="0.15"/>
        		</LinearGradientBrush>
        	</Grid.Background>
        	<TextBox x:Name="txtMailAccountName" Margin="8,44.951,8,0" TextWrapping="Wrap" Grid.Column="2" FontSize="13.333" VerticalAlignment="Top" LostFocus="txtNewUserUsername_LostFocus" RenderTransformOrigin="0.5,0.5" Grid.Row="1">
        		<TextBox.RenderTransform>
        			<TransformGroup>
        				<ScaleTransform/>
        				<SkewTransform/>
        				<RotateTransform/>
        				<TranslateTransform/>
        			</TransformGroup>
        		</TextBox.RenderTransform>
        	</TextBox>
        	<Label Content="SMTP Server:" Margin="0,97.363,9.564,0" x:Name="label1" Grid.Column="1" Foreground="White" Height="28" VerticalAlignment="Top" FontSize="13.333" HorizontalAlignment="Right" Grid.Row="1" />
        	<TextBox Margin="8,0,8,58.509" x:Name="smtpserver" Grid.Column="2" Height="23" VerticalAlignment="Bottom" Grid.Row="1" />
        	<TextBox Height="23" HorizontalAlignment="Left" Margin="8,0,0,21.578" x:Name="portsmtp" VerticalAlignment="Bottom" Width="50" Grid.Column="2" Grid.Row="1" />
        	<TextBox Margin="8,6.788,12,0" x:Name="popserver" Grid.Column="2" Height="22.9" VerticalAlignment="Top" Grid.Row="2" />
        	<TextBox HorizontalAlignment="Left" Margin="8,40.049,0,18.944" x:Name="portpop" Width="50" Grid.Column="2" Grid.Row="2" />
        	<Label Content="POP Server:" Margin="0,1.588,8,0" x:Name="label2" Grid.Column="1" Height="28.1" VerticalAlignment="Top" Foreground="White" FontSize="13.333" HorizontalAlignment="Right" Grid.Row="2" />
        	<Label Content="SMTP Port:" HorizontalAlignment="Left" Margin="66.43,0,0,21.578" x:Name="label4" Grid.Column="1" Foreground="White" FontSize="13.333" Height="26.328" VerticalAlignment="Bottom" Grid.Row="1" />
        	<Label Content="POP Port:" HorizontalAlignment="Left" Margin="75.133,40.049,0,0" x:Name="label5" Grid.Column="1" VerticalAlignment="Top" FontSize="13.333" Foreground="White" Grid.Row="2" />
        	<Label Content="Email account settings:" Background="#00000000" Foreground="White" FontSize="18.667" FontWeight="Bold" Margin="0,8,8,-52.872" d:LayoutOverrides="GridBox" Grid.Column="2" HorizontalAlignment="Right" Width="723.237"/>
        	<Label Content="Email username:" Margin="0,0,8,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" Grid.Row="3" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right"/>
        	<TextBox x:Name="txtMailUsername" Margin="8,4,8,0" TextWrapping="Wrap" Grid.Column="2" Grid.Row="3" FontSize="13.333" VerticalAlignment="Top" LostFocus="txtNewUserUsername_LostFocus"/>
        	<Label x:Name="lblMailUsernameError" Content="" Margin="8,6.174,24,0" VerticalAlignment="Top" Grid.Column="2" FontSize="10.667" Background="#00E40E0E" Foreground="Red" Grid.Row="1"/>
        	<Label Content="Email password:" Margin="0,0,8,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" Grid.Row="4" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right"/>
        	<PasswordBox x:Name="txtMailPassword" Grid.Column="2" Margin="8,4,8,0" Grid.Row="4" VerticalAlignment="Top" FontSize="13.333" FontFamily="/iBoard;component/Fonts/#Segoe UI" LostFocus="txtNewUserPassword_LostFocus" d:LayoutOverrides="VerticalAlignment"/>
        	<CheckBox Height="16" HorizontalAlignment="Left" Margin="8,8,0,0" x:Name="cbSsl" VerticalAlignment="Top" Grid.Column="2" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment" Grid.Row="5" Content="SSL" Foreground="White" />
        	<CheckBox Height="16" HorizontalAlignment="Left" Margin="106.206,0,0,296.056" x:Name="cbEnableAccount" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="5" d:LayoutOverrides="HorizontalAlignment" Content="Enable" Foreground="White" />
        	<Button x:Name="button1" Content="Validate" HorizontalAlignment="Right" Margin="0,0,8,16" Width="75" Click="ValidateMailAccount_ButtonClick" Panel.ZIndex="2" Cursor="Hand" Grid.Row="5" IsCancel="True" VerticalAlignment="Bottom" Grid.Column="2" d:LayoutOverrides="VerticalAlignment"/>
        	<Button x:Name="button" Content="Back" HorizontalAlignment="Right" Margin="0,0,90.5,16" Width="75" Click="AccountsAddMailBack_Click" Panel.ZIndex="2" Cursor="Hand" Grid.Row="5" IsCancel="True" VerticalAlignment="Bottom" Grid.Column="2" d:LayoutOverrides="VerticalAlignment"/>
        	<Label Content="Account Name:" Margin="0,41.046,16,0" FontSize="13.333" ScrollViewer.VerticalScrollBarVisibility="Hidden" Foreground="White" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Top"/>
        </Grid>

    </Grid>
</Window>
